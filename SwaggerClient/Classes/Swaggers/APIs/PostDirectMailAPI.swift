//
// PostDirectMailAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation
import Alamofire



open class PostDirectMailAPI {
    /**
     Get direct mail campaigns
     
     - parameter page: (query) Page number (optional, default to 1)
     - parameter limit: (query) Number of records per page (optional, default to 10)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func postDirectMailCampaignsGet(page: Int? = nil, limit: Int? = nil, completion: @escaping ((_ data: String?,_ error: Error?) -> Void)) {
        postDirectMailCampaignsGetWithRequestBuilder(page: page, limit: limit).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Get direct mail campaigns
     - GET /post/direct-mail/campaigns
     - Get direct mail campaigns
     - BASIC:
       - type: basic
       - name: BasicAuth
     - examples: [{contentType=application/json, example=""}]
     
     - parameter page: (query) Page number (optional, default to 1)
     - parameter limit: (query) Number of records per page (optional, default to 10)

     - returns: RequestBuilder<String> 
     */
    open class func postDirectMailCampaignsGetWithRequestBuilder(page: Int? = nil, limit: Int? = nil) -> RequestBuilder<String> {
        let path = "/post/direct-mail/campaigns"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "page": page?.encodeToJSON(), 
            "limit": limit?.encodeToJSON()
        ])

        let requestBuilder: RequestBuilder<String>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     Calculate direct mail campaign price
     
     - parameter postDirectMail: (body) PostDirectMail model 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func postDirectMailCampaignsPricePost(postDirectMail: PostDirectMail, completion: @escaping ((_ data: String?,_ error: Error?) -> Void)) {
        postDirectMailCampaignsPricePostWithRequestBuilder(postDirectMail: postDirectMail).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Calculate direct mail campaign price
     - POST /post/direct-mail/campaigns/price
     - Calculate direct mail campaign price
     - BASIC:
       - type: basic
       - name: BasicAuth
     - examples: [{contentType=application/json, example=""}]
     
     - parameter postDirectMail: (body) PostDirectMail model 

     - returns: RequestBuilder<String> 
     */
    open class func postDirectMailCampaignsPricePostWithRequestBuilder(postDirectMail: PostDirectMail) -> RequestBuilder<String> {
        let path = "/post/direct-mail/campaigns/price"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: postDirectMail)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<String>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }

    /**
     Send direct mail campaign
     
     - parameter postDirectMail: (body) PostDirectMail model 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func postDirectMailCampaignsSendPost(postDirectMail: PostDirectMail, completion: @escaping ((_ data: String?,_ error: Error?) -> Void)) {
        postDirectMailCampaignsSendPostWithRequestBuilder(postDirectMail: postDirectMail).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Send direct mail campaign
     - POST /post/direct-mail/campaigns/send
     - Send direct mail campaign
     - BASIC:
       - type: basic
       - name: BasicAuth
     - examples: [{contentType=application/json, example=""}]
     
     - parameter postDirectMail: (body) PostDirectMail model 

     - returns: RequestBuilder<String> 
     */
    open class func postDirectMailCampaignsSendPostWithRequestBuilder(postDirectMail: PostDirectMail) -> RequestBuilder<String> {
        let path = "/post/direct-mail/campaigns/send"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: postDirectMail)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<String>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }

    /**
     Search for a location
     
     - parameter country: (path) Country Code to search 
     - parameter q: (query) Search term (e.g. post code, city name) 
     - parameter page: (query) Page number (optional, default to 1)
     - parameter limit: (query) Number of records per page (optional, default to 10)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func postDirectMailLocationsSearchByCountryGet(country: String, q: String, page: Int? = nil, limit: Int? = nil, completion: @escaping ((_ data: String?,_ error: Error?) -> Void)) {
        postDirectMailLocationsSearchByCountryGetWithRequestBuilder(country: country, q: q, page: page, limit: limit).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Search for a location
     - GET /post/direct-mail/locations/search/{country}
     - Search for a location
     - BASIC:
       - type: basic
       - name: BasicAuth
     - examples: [{contentType=application/json, example=""}]
     
     - parameter country: (path) Country Code to search 
     - parameter q: (query) Search term (e.g. post code, city name) 
     - parameter page: (query) Page number (optional, default to 1)
     - parameter limit: (query) Number of records per page (optional, default to 10)

     - returns: RequestBuilder<String> 
     */
    open class func postDirectMailLocationsSearchByCountryGetWithRequestBuilder(country: String, q: String, page: Int? = nil, limit: Int? = nil) -> RequestBuilder<String> {
        var path = "/post/direct-mail/locations/search/{country}"
        let countryPreEscape = "\(country)"
        let countryPostEscape = countryPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{country}", with: countryPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "q": q, 
            "page": page?.encodeToJSON(), 
            "limit": limit?.encodeToJSON()
        ])

        let requestBuilder: RequestBuilder<String>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

}
