//
// UploadAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation
import Alamofire



open class UploadAPI {
    /**
     Upload File
     
     - parameter content: (body) Base64-encoded file contents 
     - parameter convert: (query)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func uploadsPost(content: String, convert: String, completion: @escaping ((_ data: String?,_ error: Error?) -> Void)) {
        uploadsPostWithRequestBuilder(content: content, convert: convert).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Upload File
     - POST /uploads
     - Upload File
     - BASIC:
       - type: basic
       - name: BasicAuth
     - examples: [{contentType=application/json, example=""}]
     
     - parameter content: (body) Base64-encoded file contents 
     - parameter convert: (query)  

     - returns: RequestBuilder<String> 
     */
    open class func uploadsPostWithRequestBuilder(content: String, convert: String) -> RequestBuilder<String> {
        let path = "/uploads"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: content)

        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "convert": convert
        ])

        let requestBuilder: RequestBuilder<String>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }

}
